CREATE DATABASE Hitaya_Tax
GO

USE Hitaya_Tax
GO


CREATE TABLE USERDETAILS
(
	[USERID] INT IDENTITY(1000,1),
	[PAN_CARD] VARCHAR(20) CONSTRAINT pk_PanCard PRIMARY KEY,
	[INDIVIDUAL_TAX] VARCHAR(3) NOT NULL CONSTRAINT chk_indi CHECK ([INDIVIDUAL_TAX] IN ('Yes', 'No')),
	[FIRSTNAME] VARCHAR(20) NOT NULL,
	[LASTNAME] VARCHAR(20) NOT NULL,
	[PHONE_NUMBER] VARCHAR(20) NOT NULL,
	[EMAILID] VARCHAR(20)  NOT NULL,
	[GENDER] VARCHAR(20) NOT NULL CONSTRAINT chk_gender CHECK ([GENDER] IN ('Male', 'Female', 'Other')),
	[DOB] VARCHAR(20) NOT NULL,
	[ADDRESS] VARCHAR(200) NOT NULL,	
	[PIN] VARCHAR(10) NOT NULL,
	[RESIDENT] VARCHAR(20) NOT NULL CONSTRAINT chk_resident CHECK ([RESIDENT] IN ('Resident', 'Non-resident')),
	[PASSWORD] VARCHAR(20) NOT NULL,
	[ROLEID] VARCHAR(20) NOT NULL CONSTRAINT chk_Role CHECK ([ROLEID] IN ('Admin','User'))
)
GO 

IF OBJECT_ID('USERDETAILS')  IS NOT NULL
DROP TABLE USERDETAILS
GO


CREATE PROCEDURE usp_RegisterUser
(
	@PAN_CARD VARCHAR(20),
	@INDIVIDUAL_TAX VARCHAR(3),
	@FIRSTNAME VARCHAR(20),
	@LASTNAME VARCHAR(20),
	@PHONE_NUMBER VARCHAR(20),
	@EMAILID VARCHAR(20),
	@GENDER VARCHAR(20),
	@DOB VARCHAR(20),
	@ADDRESS VARCHAR(200),
	@PIN VARCHAR(10),
	@RESIDENT VARCHAR(20),
	@PASSWORD VARCHAR(20)
	
)
AS
BEGIN
	DECLARE @RoleId TINYINT
	BEGIN TRY
		INSERT INTO USERDETAILS(PAN_CARD, INDIVIDUAL_TAX,FIRSTNAME,LASTNAME,PHONE_NUMBER,EMAILID,GENDER,DOB,ADDRESS,PIN,RESIDENT,PASSWORD,ROLEID) 
		VALUES (@PAN_CARD,@INDIVIDUAL_TAX,@FIRSTNAME,@LASTNAME,@PHONE_NUMBER,@EMAILID,@GENDER,@DOB,@ADDRESS,@PIN,@RESIDENT,@PASSWORD,'User')
		RETURN 1
	END TRY
	BEGIN CATCH
		RETURN -99
	END CATCH
END
GO

IF OBJECT_ID('usp_RegisterUser')  IS NOT NULL
DROP PROC usp_RegisterUser
GO


DECLARE @RETURNVAL INT
EXEC @RETURNVAL = usp_RegisterUser 'CGDPD1480N123', 'Yes', 'Arnab','Das','947966499','raj713335@gmail.com','Male','20-06-1997','Desh Bandhu Park','713335','Non-resident', '12345678'
SELECT @RETURNVAL AS RETURNVAL

INSERT INTO USERDETAILS(PAN_CARD, INDIVIDUAL_TAX,FIRSTNAME,LASTNAME,PHONE_NUMBER,EMAILID,GENDER,DOB,ADDRESS,PIN,RESIDENT,PASSWORD,ROLEID) 
VALUES('CGDPD1480N12', 'Yes', 'Arnab','Das','947966499','raj713335@gmail.com','Male','20-06-1997','Desh Bandhu Park','713335','Non-resident', '12345678', 'User')


SELECT * FROM USERDETAILS


CREATE PROCEDURE usp_LoginValidation
(
	@PAN_CARD VARCHAR(20),
	@PASSWORD VARCHAR(20)
)
AS
BEGIN
	DECLARE @RoleId TINYINT
	BEGIN TRY
		IF EXISTS (SELECT * FROM USERDETAILS WHERE PAN_CARD=@PAN_CARD AND PASSWORD=@PASSWORD)
			RETURN 1
		ELSE
			RETURN -1
	END TRY
	BEGIN CATCH
		RETURN -99
	END CATCH
END
GO

IF OBJECT_ID('usp_LoginValidation')  IS NOT NULL
DROP PROC usp_LoginValidation
GO


DECLARE @RETURNVAL INT
EXEC @RETURNVAL = usp_LoginValidation 'CGDPD1480N7', '12345678'
SELECT @RETURNVAL AS RETURNVAL



CREATE TABLE TAX_FILLING
(
	[TAX_ID] INT IDENTITY(1000,1),
	[PAN_CARD] VARCHAR(20)  NOT NULL FOREIGN KEY REFERENCES USERDETAILS([PAN_CARD]),
	[FILLING_YEAR] VARCHAR(20) NOT NULL,
	[FILLING_STATUS] VARCHAR(20) NOT NULL CONSTRAINT Chk_sf CHECK([FILLING_STATUS] IN ('Individual', 'HUF', 'Others')),
	[ITR_FORM] VARCHAR(20),
	[REASON] VARCHAR(200),
	[TAX_REGIME] VARCHAR(5) CONSTRAINT chk_rg CHECK([TAX_REGIME] IN ('Old', 'New')),
	[TOTAL_YEARLY_INCOME] DECIMAL(20,2),
	[Standard_Deduction] DECIMAL(10,2) CONSTRAINT chk_SD CHECK ([Standard_Deduction]<=50000),
	[80C_80CCC] DECIMAL(10,2) CONSTRAINT chk_80C_80CCC CHECK ([80C_80CCC]<=150000),
	[80D_HIP_Self] DECIMAL(10,2) CONSTRAINT chk_80D_HIP_Self CHECK ([80D_HIP_Self]<=25000),
	[80D_HIP_Parents] DECIMAL(10,2) CONSTRAINT chk_80D_HIP_Parents CHECK ([80D_HIP_Parents]<=50000),
	[80CCD_1B] DECIMAL(10,2) CONSTRAINT chk_80CCD_1B CHECK ([80CCD_1B]<=50000),
	[80CCD_2] DECIMAL(10,2),
	[80E] DECIMAL(10,2),
	[80U] DECIMAL(10,2) CONSTRAINT chk_80U CHECK ([80U]<=125000),
	[80DD] DECIMAL(10,2) CONSTRAINT chk_80DD CHECK ([80DD]<=125000),
	[80DDB] DECIMAL(10,2) CONSTRAINT chk_80DDB CHECK ([80DDB]<=100000),
	[80TTA] DECIMAL(10,2),
	[TDS_PAID] DECIMAL(10,2),
	[ADVANCE_TAX_PAID] DECIMAL(10,2),
	[TOTAL_TAXABLE_INCOME] DECIMAL(20,2),
	[TAX_TO_BE_PAID_REFUNDED] DECIMAL(10,2),
	[FORM_SUBMITTED] VARCHAR(20) NOT NULL CONSTRAINT chk_Form CHECK ([FORM_SUBMITTED]  IN ('Yes','No')),
	[STATUS] VARCHAR(20) NOT NULL CONSTRAINT chk_Status CHECK ([STATUS]  IN ('Rejected','Pending', 'Approved')),
	Constraint PK_TAX Primary Key ([PAN_CARD], [FILLING_YEAR])
)
GO 

IF OBJECT_ID('TAX_FILLING')  IS NOT NULL
DROP TABLE TAX_FILLING
GO



CREATE PROCEDURE USP_TAX_FILLING
(
	@PAN_CARD VARCHAR(20),
	@FILLING_YEAR VARCHAR(20),
	@FILLING_STATUS VARCHAR(20),
	@ITR_FORM VARCHAR(20),
	@REASON VARCHAR(200),
	@TAX_REGIME VARCHAR(5),
	@TOTAL_YEARLY_INCOME DECIMAL(20,2),
	@Standard_Deduction DECIMAL(10,2),
	@80C_80CCC DECIMAL(10,2),
	@80D_HIP_Self DECIMAL(10,2),
	@80D_HIP_Parents DECIMAL(10,2),
	@80CCD_1B DECIMAL(10,2),
	@80CCD_2 DECIMAL(10,2),
	@80E DECIMAL(10,2),
	@80U DECIMAL(10,2),
	@80DD DECIMAL(10,2),
	@80DDB DECIMAL(10,2),
	@80TTA DECIMAL(10,2),
	@TDS_PAID DECIMAL(10,2),
	@ADVANCE_TAX_PAID DECIMAL(10,2),
	@TOTAL_TAXABLE_INCOME DECIMAL(20,2),
	@TAX_TO_BE_PAID_REFUNDED DECIMAL(10,2),
	@FORM_SUBMITTED VARCHAR(20),
	@STATUS VARCHAR(20)
)
AS
BEGIN
	DECLARE @RoleId TINYINT
	BEGIN TRY
		IF NOT EXISTS(SELECT * FROM USERDETAILS WHERE PAN_CARD=@PAN_CARD)
		RETURN -1
		INSERT INTO TAX_FILLING([PAN_CARD],[FILLING_YEAR],[FILLING_STATUS],[ITR_FORM],[REASON],[TAX_REGIME],[TOTAL_YEARLY_INCOME],[Standard_Deduction],[80C_80CCC],[80D_HIP_Self],[80D_HIP_Parents],[80CCD_1B],[80CCD_2],[80E],[80U],[80DD],
		[80DDB],[80TTA],[TDS_PAID],[ADVANCE_TAX_PAID],[TOTAL_TAXABLE_INCOME],[TAX_TO_BE_PAID_REFUNDED],[FORM_SUBMITTED],[STATUS]) 
		VALUES (@PAN_CARD,@FILLING_YEAR,@FILLING_STATUS,@ITR_FORM,@REASON,@TAX_REGIME,@TOTAL_YEARLY_INCOME,@Standard_Deduction,@80C_80CCC,@80D_HIP_Self,@80D_HIP_Parents,
		@80CCD_1B,@80CCD_2,@80E,@80U,@80DD,@80DDB,@80TTA,@TDS_PAID,@ADVANCE_TAX_PAID,@TOTAL_TAXABLE_INCOME,@TAX_TO_BE_PAID_REFUNDED,@FORM_SUBMITTED,@STATUS)
		RETURN 1
	END TRY
	BEGIN CATCH
		RETURN -99
	END CATCH
END
GO

IF OBJECT_ID('USP_TAX_FILLING')  IS NOT NULL
DROP PROC USP_TAX_FILLING
GO


DECLARE @RETURNVAL INT
EXEC @RETURNVAL = USP_TAX_FILLING 'CGDPD1480N', '2021-2023','HUF','ITR-1','Taxable Income is more than the basic exemption limit', 'New',700000.32, 49999.00, 76000.23, 25000, 50000, 10000, 6000, 0, 0, 0, 0, 500, 3000, 500,0,0, 'Yes', 'Pending'
SELECT @RETURNVAL AS RETURNVAL

INSERT INTO TAX_FILLING([PAN_CARD],[FILLING_YEAR],[TOTAL_YEARLY_INCOME],[Standard_Deduction],[80C_80CCC],[80D_HIP_Self],[80D_HIP_Parents],[80CCD_1B],[80CCD_2],[80E],[80U],[80DD],
		[80DDB],[80TTA],[TDS_PAID],[ADVANCE_TAX_PAID],[TOTAL_TAXABLE_INCOME],[TAX_TO_BE_PAID_REFUNDED],[FORM_SUBMITTED],[STATUS]) 
		VALUES ('CGDPD1480NA', '2022-2023','HUF','ITR-1','Taxable Income is more than the basic exemption limit', 'New', 700000.32, 50000.00, 76000.23, 25000, 50000, 10000, 6000, 0, 0, 0, 0, 500, 
		3000, 500,0,0, 'Yes', 'Pending')

SELECT * FROM TAX_FILLING



CREATE PROCEDURE USP_UPDATE_TAX_FILLING
(
	@PAN_CARD VARCHAR(20),
	@FILLING_YEAR VARCHAR(20),
	@FILLING_STATUS VARCHAR(20),
	@ITR_FORM VARCHAR(20),
	@REASON VARCHAR(200),
	@TAX_REGIME VARCHAR(5),
	@TOTAL_YEARLY_INCOME DECIMAL(20,2),
	@Standard_Deduction DECIMAL(10,2),
	@80C_80CCC DECIMAL(10,2),
	@80D_HIP_Self DECIMAL(10,2),
	@80D_HIP_Parents DECIMAL(10,2),
	@80CCD_1B DECIMAL(10,2),
	@80CCD_2 DECIMAL(10,2),
	@80E DECIMAL(10,2),
	@80U DECIMAL(10,2),
	@80DD DECIMAL(10,2),
	@80DDB DECIMAL(10,2),
	@80TTA DECIMAL(10,2),
	@TDS_PAID DECIMAL(10,2),
	@ADVANCE_TAX_PAID DECIMAL(10,2),
	@TOTAL_TAXABLE_INCOME DECIMAL(20,2),
	@TAX_TO_BE_PAID_REFUNDED DECIMAL(10,2),
	@FORM_SUBMITTED VARCHAR(20),
	@STATUS VARCHAR(20)
)
AS
BEGIN
	DECLARE @RoleId TINYINT
	BEGIN TRY
		IF NOT EXISTS(SELECT * FROM USERDETAILS WHERE PAN_CARD=@PAN_CARD)
		RETURN -1
		IF NOT EXISTS(SELECT * FROM TAX_FILLING WHERE PAN_CARD=@PAN_CARD AND FILLING_YEAR=@FILLING_YEAR)
		RETURN -1
		UPDATE TAX_FILLING
		SET FILLING_STATUS=@FILLING_STATUS,ITR_FORM=@ITR_FORM,REASON=@REASON,TAX_REGIME=@TAX_REGIME,
		TOTAL_YEARLY_INCOME=@TOTAL_YEARLY_INCOME,Standard_Deduction=@Standard_Deduction,
		[80C_80CCC]=@80C_80CCC,[80D_HIP_Self]=@80D_HIP_Self,[80D_HIP_Parents]=@80D_HIP_Parents,
		[80CCD_1B]=@80CCD_1B,[80CCD_2]=@80CCD_2,[80E]=@80E,[80U]=@80U,[80DD]=@80DD,[80DDB]=@80DDB,
		[80TTA]=@80TTA,[TDS_PAID]=@TDS_PAID,ADVANCE_TAX_PAID=@ADVANCE_TAX_PAID,TOTAL_TAXABLE_INCOME=@TOTAL_TAXABLE_INCOME,
		TAX_TO_BE_PAID_REFUNDED=@TAX_TO_BE_PAID_REFUNDED,FORM_SUBMITTED=@FORM_SUBMITTED,STATUS=@STATUS WHERE PAN_CARD=@PAN_CARD AND FILLING_YEAR=@FILLING_YEAR
		RETURN 1
	END TRY
	BEGIN CATCH
		RETURN -99
	END CATCH
END
GO

IF OBJECT_ID('USP_UPDATE_TAX_FILLING')  IS NOT NULL
DROP PROC USP_UPDATE_TAX_FILLING
GO


DECLARE @RETURNVAL INT
EXEC @RETURNVAL = USP_UPDATE_TAX_FILLING 'CGDPD1480N', '2021-2023','HUF','ITR-1','Taxable Income is more than the basic exemption limit', 'New', 800000.32, 49999.00, 76000.23, 25000, 50000, 10000, 6000, 0, 0, 0, 0, 500, 3000, 500,0,0, 'Yes', 'Approved'
SELECT @RETURNVAL AS RETURNVAL


UPDATE TAX_FILLING
SET FILLING_STATUS='HUF',ITR_FORM='ITR-1' WHERE PAN_CARD='CGDPD1480N' AND FILLING_YEAR='2021-2023' ,REASON=@REASON,TAX_REGIME=@TAX_REGIME,
TOTAL_YEARLY_INCOME=@TOTAL_YEARLY_INCOME,Standard_Deduction=@Standard_Deduction,
[80C_80CCC]=@80C_80CCC,[80D_HIP_Self]=@80D_HIP_Self,[80D_HIP_Parents]=@80D_HIP_Parents,
[80CCD_1B]=@80CCD_1B,[80CCD_2]=@80CCD_2,[80E]=@80E,[80U]=@80U,[80DD]=@80DD,[80DDB]=@80DDB,
[80TTA]=@80TTA,[TDS_PAID]=@TDS_PAID,ADVANCE_TAX_PAID=@ADVANCE_TAX_PAID,TOTAL_TAXABLE_INCOME=@TOTAL_TAXABLE_INCOME,
TAX_TO_BE_PAID_REFUNDED=@TAX_TO_BE_PAID_REFUNDED,FORM_SUBMITTED=@FORM_SUBMITTED,STATUS=@STATUS

SELECT * FROM TAX_FILLING


CREATE FUNCTION ufn_GetAllUser()
RETURNS TABLE 
AS
	RETURN (SELECT * FROM USERDETAILS)
GO

SELECT * FROM ufn_GetAllUser()


CREATE FUNCTION ufn_GetSpecificTax(@PAN_CARD VARCHAR(20), @FILLING_YEAR VARCHAR(20))
RETURNS TABLE 
AS
	RETURN (SELECT TOP 1 * FROM TAX_FILLING WHERE PAN_CARD=@PAN_CARD AND FILLING_YEAR=@FILLING_YEAR)
GO

IF OBJECT_ID('ufn_GetSpecificUser')  IS NOT NULL
DROP FUNCTION ufn_GetSpecificUser
GO


SELECT * FROM ufn_GetSpecificTax('CGDPD1480N', '2021-2023')

SELECT TOP 1 * FROM TAX_FILLING WHERE PAN_CARD LIKE 'CGDPD1480N' AND [FILLING_YEAR] LIKE '2021-2023'
SELECT * FROM TAX_FILLING